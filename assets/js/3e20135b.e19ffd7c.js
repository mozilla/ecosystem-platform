"use strict";(self.webpackChunkfirefox_ecosystem_platform=self.webpackChunkfirefox_ecosystem_platform||[]).push([[1256],{22414:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"reference/experiments-ab-testing","title":"Experiments & A/B Testing","description":"Current as of December 3rd, 2019","source":"@site/docs/reference/experiments-ab-testing.md","sourceDirName":"reference","slug":"/reference/experiments-ab-testing","permalink":"/ecosystem-platform/reference/experiments-ab-testing","draft":false,"unlisted":false,"editUrl":"https://github.com/mozilla/ecosystem-platform/edit/master/docs/reference/experiments-ab-testing.md","tags":[],"version":"current","frontMatter":{"title":"Experiments & A/B Testing"},"sidebar":"docs","previous":{"title":"Emails","permalink":"/ecosystem-platform/reference/emails"},"next":{"title":"GitHub Strategies","permalink":"/ecosystem-platform/reference/github-strategies"}}');var i=r(74848),s=r(28453);const o={title:"Experiments & A/B Testing"},c=void 0,l={},a=[{value:"Experiment grouping rules",id:"experiment-grouping-rules",level:2},{value:"Creating a new rule",id:"creating-a-new-rule",level:3},{value:"Determining choice within a view",id:"determining-choice-within-a-view",level:2},{value:"Functional and manual testing",id:"functional-and-manual-testing",level:2},{value:"Manual test",id:"manual-test",level:3},{value:"Functional test",id:"functional-test",level:3},{value:"Amplitude Metrics",id:"amplitude-metrics",level:2},{value:"<code>choose</code> recipes",id:"choose-recipes",level:2},{value:"feature flag",id:"feature-flag",level:3},{value:"Phased rollout feature flag",id:"phased-rollout-feature-flag",level:3},{value:"A/B test",id:"ab-test",level:3},{value:"Phased rollout A/B test",id:"phased-rollout-ab-test",level:3},{value:"Recursive calls to other rules",id:"recursive-calls-to-other-rules",level:3},{value:"Mutually exclusive grouping rules",id:"mutually-exclusive-grouping-rules",level:3},{value:"group_chooser.js",id:"group_chooserjs",level:4},{value:"experiment_1.js",id:"experiment_1js",level:4},{value:"experiment_2.js",id:"experiment_2js",level:4},{value:"View recipes",id:"view-recipes",level:2},{value:"Add the ExperimentMixin",id:"add-the-experimentmixin",level:3},{value:"Get the experiment group, report the choice to Amplitude",id:"get-the-experiment-group-report-the-choice-to-amplitude",level:3},{value:"Get the experiment group without reporting choice to Amplitude",id:"get-the-experiment-group-without-reporting-choice-to-amplitude",level:3},{value:"Is user in an experiment?",id:"is-user-in-an-experiment",level:3},{value:"Is user in a group?",id:"is-user-in-a-group",level:3},{value:"Pass additional data to <code>choose</code>",id:"pass-additional-data-to-choose",level:3},{value:"Ensuring experiment metrics are reported to Amplitude",id:"ensuring-experiment-metrics-are-reported-to-amplitude",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Current as of ",(0,i.jsx)(n.code,{children:"December 3rd, 2019"})]}),"\n",(0,i.jsx)(n.p,{children:"This document outlines how to add an experiment, A/B test, or phased rollout of a feature in the content server."}),"\n",(0,i.jsx)(n.h2,{id:"experiment-grouping-rules",children:"Experiment grouping rules"}),"\n",(0,i.jsx)(n.p,{children:"Every new experiment, A/B test, or phased rollout needs an experiment grouping\nrule. These rules decide whether a user is part of an experiment, and if so, which group."}),"\n",(0,i.jsxs)(n.p,{children:["An experiment grouping rule needs some metadata about the user, within\nthe rule the metadata is called ",(0,i.jsx)(n.code,{children:"subject"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"creating-a-new-rule",children:"Creating a new rule"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Copy ",(0,i.jsx)(n.a,{href:"https://github.com/mozilla/fxa/blob/main/packages/fxa-content-server/app/scripts/lib/experiments/grouping-rules/TEMPLATE.js",children:"TEMPLATE.js"})," to a new grouping rule file."]}),"\n",(0,i.jsxs)(n.li,{children:["Change ",(0,i.jsx)(n.code,{children:"ChangeMeGroupingRule"})," class name to another name."]}),"\n",(0,i.jsxs)(n.li,{children:["Change ",(0,i.jsx)(n.code,{children:"this.name"})," from ",(0,i.jsx)(n.code,{children:"CHANGE_ME"})," in the constructor."]}),"\n",(0,i.jsxs)(n.li,{children:["Fill in the ",(0,i.jsx)(n.code,{children:"choose"})," function. See ",(0,i.jsxs)(n.a,{href:"#choose-recipes",children:[(0,i.jsx)(n.code,{children:"choose"})," recipes"]})," for guidance on different experiment types."]}),"\n",(0,i.jsxs)(n.li,{children:["Include the new grouping rule file in ",(0,i.jsx)(n.a,{href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/lib/experiments/grouping-rules/index.js",children:"index.js"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Add experiment name to one of ",(0,i.jsx)(n.a,{href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/lib/experiment.js",children:"MANUAL_EXPERIMENTS or STARTUP_EXPERIMENTS"})," to ensure test name/group are reported to Amplitude."]}),"\n",(0,i.jsxs)(n.li,{children:["Access in views, see ",(0,i.jsx)(n.a,{href:"#view-recipes",children:"View recipes"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"determining-choice-within-a-view",children:"Determining choice within a view"}),"\n",(0,i.jsxs)(n.p,{children:["Once a grouping rule has been created, a view can make choices depending\non whether the user is in the experiment, and if so which group. ",(0,i.jsx)(n.a,{href:"https://github.com/mozilla/fxa/blob/main/packages/fxa-content-server/app/scripts/views/mixins/experiment-mixin.js",children:"ExperimentMixin"})," ",(0,i.jsx)(n.em,{children:"must"})," be mixed in to the view for the view to have experiment capabilities."]}),"\n",(0,i.jsxs)(n.p,{children:["See also: ",(0,i.jsx)(n.a,{href:"#view-recipes",children:"View recipes"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"functional-and-manual-testing",children:"Functional and manual testing"}),"\n",(0,i.jsxs)(n.p,{children:["To avoid random breakage of functional tests due to experiments, by default, ",(0,i.jsx)(n.em,{children:"all"})," experiments are disabled during test runs. It is however possible to force an\nexperiment using the ",(0,i.jsx)(n.code,{children:"forceExperiment"})," and ",(0,i.jsx)(n.code,{children:"forceExperimentGroup"})," query parameters."]}),"\n",(0,i.jsxs)(n.p,{children:["Both of these examples force the user into the ",(0,i.jsx)(n.code,{children:"treatment"})," group of the ",(0,i.jsx)(n.code,{children:"my-new-experiment"})," experiment."]}),"\n",(0,i.jsx)(n.h3,{id:"manual-test",children:"Manual test"}),"\n",(0,i.jsx)(n.p,{children:"In the URL bar, open:"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://accounts.firefox.com/settings?forceExperiment=my-new-experiment&forceExperimentGroup=treatment",children:"https://accounts.firefox.com/settings?forceExperiment=my-new-experiment&forceExperimentGroup=treatment"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"functional-test",children:"Functional test"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"  ...\n  'test new feature here': function () {\n    this.remote\n      .then(openPage('/settings', {\n        query: {\n          forceExperiment: 'my-new-experiment',\n          forceExperimentGroup: 'treatment'\n        }\n      }))\n      .then(testTreatmentGroupFunctionality());\n  },\n  ...\n"})}),"\n",(0,i.jsx)(n.h2,{id:"amplitude-metrics",children:"Amplitude Metrics"}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"We no longer use Amplitude.  This section is out of date."})}),"\n",(0,i.jsxs)(n.p,{children:["As long as the experiment name is added to one of ",(0,i.jsx)(n.a,{href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/lib/experiment.js",children:"MANUAL_EXPERIMENTS or STARTUP_EXPERIMENTS"}),", the experiment name and group are reported to Amplitude and added to the user's ",(0,i.jsx)(n.code,{children:"experiments"})," user property. The Amplitude experiment name is in the form:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"amplitudeExperimentName = ${snake_case(experimentName)}_${snake_case(groupName)}`\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"choose-recipes",children:[(0,i.jsx)(n.code,{children:"choose"})," recipes"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"subject"})," parameter contains data used to determine the value returned from ",(0,i.jsx)(n.code,{children:"choose"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"subject"})," automatically ",(0,i.jsx)(n.a,{href:"https://github.com/mozilla/fxa/blob/cc74b2bf5be4184d20c919aaa199677ebfd431d1/packages/fxa-content-server/app/scripts/lib/experiment.js#L216",children:"contains the following fields"}),":"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Field"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"account"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.a,{href:"https://github.com/mozilla/fxa/blob/main/packages/fxa-content-server/app/scripts/models/account.js#L1",children:"Account model"})," for the user."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"experimentGroupingRules"})}),(0,i.jsxs)(n.td,{children:["A reference to ",(0,i.jsx)(n.em,{children:"all"})," grouping rules. Used to recursively choose experiments"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"forceExperiment"})}),(0,i.jsxs)(n.td,{children:["the value of the ",(0,i.jsx)(n.code,{children:"forceExperiment"})," query parameter. Used in functional/manual tests to force a particular experiment."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"forceExperimentGroup"})}),(0,i.jsxs)(n.td,{children:["the value of the ",(0,i.jsx)(n.code,{children:"forceExperimentGroup"})," query parameter. Used in functional/manual tests to force a particular experiment group."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"isMetricsEnabledValue"})}),(0,i.jsx)(n.td,{children:"A legacy of when metrics were sampled at 10%. Does not apply to Amplitude events."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"uniqueUserId"})}),(0,i.jsxs)(n.td,{children:["A stable UUID that is distinct from the user's uid. The same ",(0,i.jsx)(n.code,{children:"uniqueUserId"})," is used across multiple users of the same device to ensure multiple users of a single device receive the same experience."]})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["Additional fields can be passed to ",(0,i.jsx)(n.code,{children:"choose"})," via ",(0,i.jsx)(n.a,{href:"https://github.com/mozilla/fxa/blob/16e6295edc5d805ea5f7e00217f20d0bdbf4a9c2/packages/fxa-content-server/app/scripts/lib/experiment.js#L208",children:(0,i.jsx)(n.code,{children:"getExperimentGroup"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"uniqueUserId"})," is used to ensure multiple users receive the same experience on the same device. Conversely, a single user will have distinct ",(0,i.jsx)(n.code,{children:"uniqueUserId"}),"s on multiple devices. If the goal is for a single user to have the same experience across multiple devices, in the examples below replace ",(0,i.jsx)(n.code,{children:"subject.uniqueUserId"})," with ",(0,i.jsx)(n.code,{children:"subject.account.get('email')"})," or ",(0,i.jsx)(n.code,{children:"subject.account.get('uid')"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"feature-flag",children:"feature flag"}),"\n",(0,i.jsx)(n.p,{children:"Return a boolean value."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"choose (subject = {}) {\n  return subject.firefoxVersion >= MIN_FIREFOX_VERSION;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"phased-rollout-feature-flag",children:"Phased rollout feature flag"}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"bernoulliTrial"})," to return a Boolean value."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const ROLLOUT_RATE = 0.3;\nchoose (subject = {}) {\n  return this.bernoulliTrial(ROLLOUT_RATE, subject.uniqueUserId);\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ab-test",children:"A/B test"}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"uniformChoice"})," to return the bucket choice."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"choose (subject = {}) {\n  const GROUPS = ['control', 'treatment'];\n  return this.uniformChoice(GROUPS, subject.uniqueUserId);\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"phased-rollout-ab-test",children:"Phased rollout A/B test"}),"\n",(0,i.jsxs)(n.p,{children:["Combine ",(0,i.jsx)(n.code,{children:"bernoulliTrial"})," and ",(0,i.jsx)(n.code,{children:"uniformChoice"}),".\nFirst, use ",(0,i.jsx)(n.code,{children:"bernoulliTrial"})," to determine if the user is\npart of the experiment. If the user is part of the experiment,\nuse ",(0,i.jsx)(n.code,{children:"uniformChoice"})," to determine which bucket."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"choose (subject = {}) {\n  const ROLLOUT_RATE = 0.3;\n  // first, determine if the user is part of the experiment.\n  if (this.bernoulliTrial(ROLLOUT_RATE, subject.uniqueUserId)) {\n    // User is part of the experiment, determine which bucket.\n    // 15% of users will be in `control`, 15% in `treatment`\n    const GROUPS = ['control', 'treatment'];\n    return this.uniformChoice(GROUPS, subject.uniqueUserId);\n  }\n  return false;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"recursive-calls-to-other-rules",children:"Recursive calls to other rules"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"subject"})," will contain a reference to ",(0,i.jsx)(n.code,{children:"experimentGroupingRules"})," which can\nbe used to recursively call other tests."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"choose (subject = {}) {\n  const choice = this.uniformChoice(['recursive-rule-1', 'recursive-rule-2'], subject.uniqueUserId);\n  return subject.experimentGroupingRules.choose(choice, subject);\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"mutually-exclusive-grouping-rules",children:"Mutually exclusive grouping rules"}),"\n",(0,i.jsx)(n.p,{children:"Recursive rules can be used to implement mutual exclusion amongst two or more grouping rules."}),"\n",(0,i.jsx)(n.h4,{id:"group_chooserjs",children:"group_chooser.js"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"constructor () {\n  super();\n  this.name = 'experiment-chooser';\n}\n\nchoose (subject = {}) {\n  return this.uniformChoice(['experiment-1', 'experiment-2'], subject.uniqueUserId);\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"experiment_1js",children:"experiment_1.js"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"constructor () {\n  super();\n  this.name = 'experiment-1';\n}\n\nchoose (subject = {}) {\n  if (subject.experimentGroupingRules.choose('experiment-chooser') === this.name) {\n    // user is part of the experiment-1, determine which bucket.\n    const GROUPS = ['control', 'treatment'];\n    return this.uniformChoice(GROUPS, subject.uniqueUserId);\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"experiment_2js",children:"experiment_2.js"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"constructor () {\n  super();\n  this.name = 'experiment-2';\n}\n\nchoose (subject = {}) {\n  if (subject.experimentGroupingRules.choose('experiment-chooser') === this.name) {\n    // user is part of the experiment-2, determine which bucket.\n    const GROUPS = ['control', 'treatment'];\n    return this.uniformChoice(GROUPS, subject.uniqueUserId);\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"view-recipes",children:"View recipes"}),"\n",(0,i.jsx)(n.h3,{id:"add-the-experimentmixin",children:"Add the ExperimentMixin"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import BaseView from './base';\nimport Cocktail from '../lib/cocktail';\nimport ExperimentMixin from './mixins/experiment-mixin'\n\nclass MyView extends BaseView {\n  ...\n}\n\nCocktail.extend(\n  MyView,\n  ExperimentMixin\n);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"get-the-experiment-group-report-the-choice-to-amplitude",children:"Get the experiment group, report the choice to Amplitude"}),"\n",(0,i.jsx)(n.p,{children:"This is the most common form as well as the most flexible because\nit does everything necessary to report to Amplitude."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const experimentGroup = this.getAndReportExperimentGroup('experiment-2');\nif (experimentGroup === 'treatment') {\n    // do something awesome here.\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"get-the-experiment-group-without-reporting-choice-to-amplitude",children:"Get the experiment group without reporting choice to Amplitude"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const experimentGroup = this.getExperimentGroup('experiment-2');\nif (experimentGroup === 'treatment') {\n    // do something awesome here.\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"is-user-in-an-experiment",children:"Is user in an experiment?"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"if (this.isInExperiment('experiment-2')) {\n    // do something awesome here.\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"is-user-in-a-group",children:"Is user in a group?"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"if (this.isInExperimentGroup('experiment-2', 'treatment')) {\n    // do something awesome here.\n}\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"pass-additional-data-to-choose",children:["Pass additional data to ",(0,i.jsx)(n.code,{children:"choose"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const country = getCountrySomehow();\nconst experimentGroup = this.getExperimentGroup('experiment-2', {\n  // can be used by `choose` to gate a feature on the user's country\n  country\n});\nif (experimentGroup === 'treatment') {\n    // do something awesome here.\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"ensuring-experiment-metrics-are-reported-to-amplitude",children:"Ensuring experiment metrics are reported to Amplitude"}),"\n",(0,i.jsxs)(n.p,{children:["As noted in ",(0,i.jsx)(n.a,{href:"#creating-a-new-rule",children:"Creating a new rule"}),", the experiment name\n",(0,i.jsx)(n.em,{children:"must"})," be added to one of ",(0,i.jsx)(n.a,{href:"https://github.com/mozilla/fxa/tree/main/packages/fxa-content-server/app/scripts/lib/experiment.js",children:"MANUAL_EXPERIMENTS or STARTUP_EXPERIMENTS"})," to ensure experiment metrics are reported to Amplitude."]}),"\n",(0,i.jsxs)(n.p,{children:["Within a view, if the user is part of an experiment, ",(0,i.jsx)(n.code,{children:"this.createExperiment(experimentName, groupName)"})," must be called."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>c});var t=r(96540);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);