"use strict";(self.webpackChunkfirefox_ecosystem_platform=self.webpackChunkfirefox_ecosystem_platform||[]).push([[1112],{28453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>a});var t=n(96540);const r={},s=t.createContext(r);function o(e){const i=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:i},e.children)}},46597:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"relying-parties/tutorials/pairing","title":"Pairing authentication","description":"Overview","source":"@site/docs/relying-parties/tutorials/pairing.md","sourceDirName":"relying-parties/tutorials","slug":"/relying-parties/tutorials/pairing","permalink":"/ecosystem-platform/relying-parties/tutorials/pairing","draft":false,"unlisted":false,"editUrl":"https://github.com/mozilla/ecosystem-platform/edit/master/docs/relying-parties/tutorials/pairing.md","tags":[],"version":"current","frontMatter":{"id":"pairing","title":"Pairing authentication","sidebar_label":"Pairing authentication"},"sidebar":"docs","previous":{"title":"Integration with Subscription Platform","permalink":"/ecosystem-platform/relying-parties/tutorials/integration-with-subscription-platform"},"next":{"title":"End-to-end Encryption","permalink":"/ecosystem-platform/relying-parties/how-tos/end-to-end-encryption"}}');var r=n(74848),s=n(28453);const o={id:"pairing",title:"Pairing authentication",sidebar_label:"Pairing authentication"},a=void 0,c={},l=[{value:"Overview",id:"overview",level:2},{value:"User Flow",id:"user-flow",level:2},{value:"Implementation",id:"implementation",level:2},{value:"High-level description of the flow",id:"high-level-description-of-the-flow",level:3},{value:"Detailed implementation description",id:"detailed-implementation-description",level:3},{value:"Where does the code live?",id:"where-does-the-code-live",level:3},{value:"Possible evolutions",id:"possible-evolutions",level:2}];function h(e){const i={a:"a",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(i.p,{children:'A Firefox Account user can connect a new device to their account without entering a password,\nby instead "pairing" with an already-connected device in order to obtain account credentials.'}),"\n",(0,r.jsx)(i.p,{children:"Currently, the pairing implementation is limited to a mobile device (Firefox Android and iOS) scanning a QR code displayed on a computer (Firefox Desktop) already connected to a Firefox Account. We hope to expand these capabilities in future."}),"\n",(0,r.jsx)(i.h2,{id:"user-flow",children:"User Flow"}),"\n",(0,r.jsx)(i.p,{children:"Let's assume that the user is already signed-in to their Desktop Firefox profile."}),"\n",(0,r.jsx)(i.p,{children:"On their mobile device, Firefox invites them to navigate to firefox.com/pair on their Desktop browser,\nand offers to scan the QR code which will be generated by that device. Like this:"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"The Firefox Mobile pairing screen",src:n(83435).A+"",width:"398",height:"500"})}),"\n",(0,r.jsx)(i.p,{children:"When they visit that URL on their Desktop device, it will confirm their intent to connect\nanother device, and then generate and display a QR code. Like this:"}),"\n",(0,r.jsx)(i.p,{children:(0,r.jsx)(i.img,{alt:"The Firefox Desktop pairing screen",src:n(98033).A+"",width:"778",height:"600"})}),"\n",(0,r.jsx)(i.p,{children:"When the user scans the QR code, each device will show a confirmation screen,\nand after user approval the new device will be connected to their account."}),"\n",(0,r.jsxs)(i.p,{children:["A detailed technical user-flow is available ",(0,r.jsx)(i.a,{href:"https://lucid.app/lucidchart/9a420c19-1e92-42a5-8eae-908a442c1044/edit?page=0",children:"here"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"implementation",children:"Implementation"}),"\n",(0,r.jsx)(i.h3,{id:"high-level-description-of-the-flow",children:"High-level description of the flow"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["The two devices exchange a one-time secret key via QR code, and use it to create\na shared, encrypted and authenticated communication channel over websockets.","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["The ",(0,r.jsx)(i.a,{href:"https://github.com/mozilla-services/channelserver",children:"Channel Server"})," is responsible\nfor proxying communication between the two devices."]}),"\n",(0,r.jsxs)(i.li,{children:["The ",(0,r.jsx)(i.a,{href:"https://github.com/mozilla/fxa-pairing-channel",children:"Pairing Channel library"})," provides the\ncrypto necessary to authenticate and encrypt the channel, using TLS1.3 in pre-shared-key mode."]}),"\n",(0,r.jsx)(i.li,{children:"The Desktop device is responsible for creating the channel and its corresponding secret key,\nand advertising those details in a QR code."}),"\n",(0,r.jsx)(i.li,{children:"The Mobile device connects to the channel using the details it scans from the QR code."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["The Mobile device prepares an OAuth request for connecting to FxA, but instead of redirecting\nto a webpage on ",(0,r.jsx)(i.a,{href:"https://accounts.firefox.com",children:"https://accounts.firefox.com"}),", it sends the OAuth request to the Desktop device\nover the pairing channel."]}),"\n",(0,r.jsx)(i.li,{children:"The Desktop device receives the OAuth request, confirms user consent, and uses its existing\ncredentials to tell the FxA server to grant a corresponding OAuth authorization code. Instead\nof delivering the code via the usual OAuth HTTP redirect, it sends the code back to the Mobile device over the pairing channel."}),"\n",(0,r.jsx)(i.li,{children:"The Mobile device receives the code and processes it just as it would for an ordinary\nweb-based OAuth flow, by talking to the FxA server to exchange the code for some OAuth tokens."}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:'There is some additional message-passing the takes place over the pairing channel in order to\nshow confirmation screens and help smooth out the experience, but the high-level abstraction\nis "do an OAuth flow, but using the pairing channel instead of HTTP redirects".'}),"\n",(0,r.jsx)(i.h3,{id:"detailed-implementation-description",children:"Detailed implementation description"}),"\n",(0,r.jsxs)(i.p,{children:["The implementation, security concerns, and desired security proeperties are described ",(0,r.jsx)(i.a,{href:"/ecosystem-platform/explanation/pairing-flow-architecture",children:"here"}),"."]}),"\n",(0,r.jsx)(i.h3,{id:"where-does-the-code-live",children:"Where does the code live?"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://github.com/mozilla-services/channelserver",children:"Channel Server"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://github.com/mozilla/fxa-pairing-channel",children:"Pairing Channel"})}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.a,{href:"https://searchfox.org/mozilla-central/rev/23c25cd32a1e87095301273937b4ee162f41e860/services/fxaccounts/FxAccountsPairing.jsm",children:"Desktop client implementation"})," (",(0,r.jsx)(i.a,{href:"https://searchfox.org/mozilla-central/rev/23c25cd32a1e87095301273937b4ee162f41e860/browser/components/preferences/fxaPairDevice.js",children:"UI"}),")"]}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://github.com/mozilla/application-services/blob/40bef1314d9cf20fdfa8e1c1539a5205c4bdd462/components/fxa-client/src/oauth.rs#L111-L136",children:"Mobile client implementation"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://github.com/mozilla/fxa/blob/44bbb161d958f084c1bb39902554f69a2333de90/packages/fxa-content-server/app/scripts/models/pairing/supplicant-state-machine.js",children:"Content server implementation"})}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"possible-evolutions",children:"Possible evolutions"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Reverse pairing: allow a computer to connect to an account by scanning a QR code with an already connected mobile Firefox."}),"\n",(0,r.jsx)(i.li,{children:"Pairing using a code to type: more accessible, allows device without a back camera to pair (i.e. 2 computers)."}),"\n"]})]})}function d(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},83435:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/fxa-pairing-mobile-27675340d53bf99d9201749169a5dfb6.png"},98033:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/fxa-pairing-desktop-78a4f013872dc35572a01fa0de2a6748.png"}}]);