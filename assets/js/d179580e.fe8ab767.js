"use strict";(self.webpackChunkfirefox_ecosystem_platform=self.webpackChunkfirefox_ecosystem_platform||[]).push([[3204],{60653:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var n=t(74848),s=t(28453);const o={title:"Mobile Specifics"},i=void 0,c={id:"reference/mobile-specifics",title:"Mobile Specifics",description:"Firefox for iOS",source:"@site/docs/reference/mobile-specifics.md",sourceDirName:"reference",slug:"/reference/mobile-specifics",permalink:"/ecosystem-platform/reference/mobile-specifics",draft:!1,unlisted:!1,editUrl:"https://github.com/mozilla/ecosystem-platform/edit/master/docs/reference/mobile-specifics.md",tags:[],version:"current",frontMatter:{title:"Mobile Specifics"},sidebar:"docs",previous:{title:"Metrics",permalink:"/ecosystem-platform/reference/metrics"},next:{title:"NPM / NX Guidelines",permalink:"/ecosystem-platform/reference/npm-scripts-and-nx"}},p={},d=[{value:"Firefox for iOS",id:"firefox-for-ios",level:3},{value:"Android debugging",id:"android-debugging",level:3}];function a(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h3,{id:"firefox-for-ios",children:"Firefox for iOS"}),"\n",(0,n.jsx)(r.admonition,{type:"tip",children:(0,n.jsx)(r.p,{children:"Skip this if you are not working on Firefox for iOS and FxA."})}),"\n",(0,n.jsxs)(r.p,{children:["You can test sync locally in Firefox iOS using the XCode simulator.\n",(0,n.jsxs)(r.a,{href:"https://github.com/mozilla/firefox-ios",children:["Follow the steps at github.com/mozilla/firefox-ios and setup ",(0,n.jsx)(r.em,{children:"firefox-ios"})," "]})," build locally.\nCurrently there is no way to dynamically switch servers in Firefox for iOS, to use ",(0,n.jsx)(r.strong,{children:"local"})," servers you need to run the script below:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",children:"FIREFOX_IOS_HOME=<path_to_firefox_ios_project> npm run config-fxios\n"})}),"\n",(0,n.jsxs)(r.p,{children:["After the script you need to rebuild ",(0,n.jsx)(r.em,{children:"firefox-ios"}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"android-debugging",children:"Android debugging"}),"\n",(0,n.jsx)(r.p,{children:"The following technique works with any Android application and can also be used for Firefox for Android."}),"\n",(0,n.jsx)(r.p,{children:"Simply forward the following ports from the host machine to the Android device:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",children:"npm run adb-reverse\n"})}),"\n",(0,n.jsx)(r.p,{children:"or"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",children:"adb reverse tcp:3306  tcp:3306  # MySQL server\nadb reverse tcp:6379  tcp:6379  # redis\nadb reverse tcp:4100  tcp:4100  # Fake SQS/SNS\nadb reverse tcp:8085  tcp:8085  # google-pubsub-emulator\nadb reverse tcp:9090  tcp:9090  # google-firestore-emulator\nadb reverse tcp:5000  tcp:5000  # sync server\nadb reverse tcp:8001  tcp:8001  # cirrus (experimenter)\nadb reverse tcp:8000  tcp:8000  # auth-server db mysql\nadb reverse tcp:9000  tcp:9000  # auth-server key server\nadb reverse tcp:3030  tcp:3030  # content-server\nadb reverse tcp:1111  tcp:1111  # profile-server\nadb reverse tcp:9292  tcp:9292  # Fortress\nadb reverse tcp:8080  tcp:8080  # 123done\nadb reverse tcp:10139 tcp:10139 # 321done\nadb reverse tcp:5050  tcp:5050  # browserid-verifier\nadb reverse tcp:3031  tcp:3031  # payments server\nadb reverse tcp:7100  tcp:7100  # support admin panel\nadb reverse tcp:8002  tcp:8002  # pushbox\nadb reverse tcp:3000  tcp:3000  # react app\nadb reverse tcp:8290  tcp:8290  # graphql api\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Then run ",(0,n.jsx)(r.code,{children:"yarn start"})," and get to work!"]})]})}function l(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>c});var n=t(96540);const s={},o=n.createContext(s);function i(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);