"use strict";(self.webpackChunkfirefox_ecosystem_platform=self.webpackChunkfirefox_ecosystem_platform||[]).push([[8437],{88601:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var t=o(74848),i=o(28453);const r={title:"Application Logging"},s=void 0,a={id:"reference/application-logging",title:"Application Logging",description:"Application Logging",source:"@site/docs/reference/application-logging.md",sourceDirName:"reference",slug:"/reference/application-logging",permalink:"/ecosystem-platform/reference/application-logging",draft:!1,unlisted:!1,editUrl:"https://github.com/mozilla/ecosystem-platform/edit/master/docs/reference/application-logging.md",tags:[],version:"current",frontMatter:{title:"Application Logging"},sidebar:"docs",previous:{title:"Continuous Integration for Monorepos",permalink:"/ecosystem-platform/reference/continuous-integration-for-monorepos"},next:{title:"Application Tracing",permalink:"/ecosystem-platform/reference/application-tracing"}},l={},c=[{value:"Application Logging",id:"application-logging",level:2},{value:"Capturing Event Details",id:"capturing-event-details",level:3},{value:"Viewing Event Logs",id:"viewing-event-logs",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"application-logging",children:"Application Logging"}),"\n",(0,t.jsxs)(n.p,{children:["In FxA Javascript/Typescript server-side applications, logging is emitted via ",(0,t.jsx)(n.a,{href:"https://github.com/mozilla/mozlog/",children:"mozlog"})," which adheres to the ",(0,t.jsx)(n.a,{href:"https://wiki.mozilla.org/Firefox/Services/Logging#MozLog_JSON_schema",children:"mozlog schema"})," format. The log messages are captured from ",(0,t.jsx)(n.code,{children:"stdout"})," and aggregated into Google ",(0,t.jsx)(n.a,{href:"https://console.cloud.google.com/bigquery",children:"BigQuery"})," via Stackdriver. Application exceptions are captured via ",(0,t.jsx)(n.a,{href:"https://sentry.io/",children:"Sentry"})," and sent to our Sentry instance."]}),"\n",(0,t.jsxs)(n.p,{children:["Stage and development logging is grouped under the ",(0,t.jsx)(n.code,{children:"fxa-nonprod"})," project, while accessing the ",(0,t.jsx)(n.code,{children:"fxa-prod"})," logs requires additional special access privileges."]}),"\n",(0,t.jsx)(n.h3,{id:"capturing-event-details",children:"Capturing Event Details"}),"\n",(0,t.jsxs)(n.p,{children:["Once a ",(0,t.jsx)(n.code,{children:"mozlog"})," instance is created, log events are captured with a dot concatenated string indicating an (ideally) unique location of the logging statement that is clear where in the code-base it was made, along with any additional fields to include."]}),"\n",(0,t.jsxs)(n.p,{children:["Creating a ",(0,t.jsx)(n.code,{children:"mozlog"})," instance can be done by instantiating the log object with a configuration object:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const logConfig = {\n    app: 'fxa-content-server',\n    fmt: 'heka',\n    level: 'info'\n};\nconst log = require('mozlog')(logConfig);\n"})}),"\n",(0,t.jsx)(n.p,{children:"It can then be used to log with:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"log.error('push.sendPush', {uid, deviceId, err });\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The above log event will have a ",(0,t.jsx)(n.code,{children:"jsonPayload.type"})," set to ",(0,t.jsx)(n.code,{children:"push.sendPush"}),", while the additional object properties will be attached as the ",(0,t.jsx)(n.code,{children:"jsonPayload.fields"})," object."]}),"\n",(0,t.jsx)(n.h3,{id:"viewing-event-logs",children:"Viewing Event Logs"}),"\n",(0,t.jsxs)(n.p,{children:["Using ",(0,t.jsx)(n.a,{href:"https://console.cloud.google.com/bigquery",children:"bigquery"}),", the logs can be retrieved from the application service that generated them by narrowing down the ",(0,t.jsx)(n.code,{children:"stdout"})," table used and the originating service by its container name ",(0,t.jsx)(n.em,{children:"or"})," querying the service table directly."]}),"\n",(0,t.jsxs)(n.p,{children:["Container names for currently deployed services that output to ",(0,t.jsx)(n.code,{children:"stdout"})," tables:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"payments"})," - FxA Payment Server"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"amplitude"})," - FxA Amplitude Send"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"eventbroker"})," - FxA Event Broker"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["As these change over time, a quick way to determine available container names can be done using a ",(0,t.jsx)(n.code,{children:"DISTINCT"})," query (using the desired date):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT DISTINCT(resource.labels.container_name)\nFROM `moz-fx-fxa-nonprod-375e.fxa_stage_logs.stdout_20191204`\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"https://console.cloud.google.com/bigquery",children:"bigquery"})," console has tab-complete for table-names and SQL statements to make query generation easy."]}),"\n",(0,t.jsxs)(n.p,{children:["Accessing logs from the FxA Auth Server, FxA Auth Db MySQL Service, etc. requires querying the appropriate table. Some table prefix examples from ",(0,t.jsx)(n.code,{children:"stage"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["fxa-auth-server - ",(0,t.jsx)(n.code,{children:"moz-fx-fxa-nonprod-375e.fxa_stage_logs.docker_fxa_auth_20191205"})]}),"\n",(0,t.jsxs)(n.li,{children:["fxa-auth-db-server - ",(0,t.jsx)(n.code,{children:"moz-fx-fxa-nonprod-375e.fxa_stage_logs.docker_fxa_auth_db_20191204"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["A full list of these tabale prefixes can be found in the ",(0,t.jsx)(n.a,{href:"https://console.cloud.google.com/bigquery",children:"bigquery"})," console by clicking on the left side drop-down and expanding it under ",(0,t.jsx)(n.code,{children:"fxa_stage_logs"})," (or prod). FxA services all start with ",(0,t.jsx)(n.code,{children:"docker_fxa_"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["For the newer moz-fx-fxa-nonprod and moz-fx-fxa-prod projects in GCP, logs are in ",(0,t.jsx)(n.a,{href:"https://console.cloud.google.com/bigquery",children:"bigquery"})," with separate tables based on the type of log. These include events, export_errors, requests, stderr, and stdout."]}),"\n",(0,t.jsx)(n.p,{children:"Below is an example of searching logs written to standard out for July 10, 2023."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'SELECT LogName, resource.type, resource.labels.project_id, resource.labels.pod_name, resource.labels.location, resource.labels.location, resource.labels.namespace_name, resource.labels.cluster_name, textPayload FROM `moz-fx-fxa-nonprod.gke_fxa_stage_log.stdout` WHERE TIMESTAMP_TRUNC(_PARTITIONTIME, DAY) = TIMESTAMP("2023-07-10") LIMIT 1000\n'})})]})}function g(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>a});var t=o(96540);const i={},r=t.createContext(i);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);