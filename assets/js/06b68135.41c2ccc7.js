"use strict";(self.webpackChunkfirefox_ecosystem_platform=self.webpackChunkfirefox_ecosystem_platform||[]).push([[864],{65493:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>h});var t=i(74848),s=i(28453);const a={title:"Triage Owner Duties"},r=void 0,o={id:"reference/team-processes/triage-process",title:"Triage Owner Duties",description:"What is a Triage Owner?",source:"@site/docs/reference/team-processes/triage-process.md",sourceDirName:"reference/team-processes",slug:"/reference/team-processes/triage-process",permalink:"/ecosystem-platform/reference/team-processes/triage-process",draft:!1,unlisted:!1,editUrl:"https://github.com/mozilla/ecosystem-platform/edit/master/docs/reference/team-processes/triage-process.md",tags:[],version:"current",frontMatter:{title:"Triage Owner Duties"},sidebar:"docs",previous:{title:"Work Breakdown",permalink:"/ecosystem-platform/reference/team-processes/work-breakdown-process"},next:{title:"Release Owner Duties",permalink:"/ecosystem-platform/reference/team-processes/release-process"}},l={},h=[{value:"What is a Triage Owner?",id:"what-is-a-triage-owner",level:2},{value:"I am the Triage Owner: How should I prioritize my Sprint?",id:"i-am-the-triage-owner-how-should-i-prioritize-my-sprint",level:2},{value:"FxA",id:"fxa",level:3},{value:"SubPlat",id:"subplat",level:3},{value:"What are the Triage Owner Responsibilities?",id:"what-are-the-triage-owner-responsibilities",level:2},{value:"FxA",id:"fxa-1",level:3},{value:"SubPlat",id:"subplat-1",level:3},{value:"Host the Triage Meeting",id:"host-the-triage-meeting",level:2},{value:"Jira",id:"jira",level:3},{value:"Sentry",id:"sentry",level:3},{value:"Grafana",id:"grafana",level:3},{value:"Bugzilla (FxA only)",id:"bugzilla-fxa-only",level:3},{value:"Stripe Triage (SubPlat only)",id:"stripe-triage-subplat-only",level:3},{value:"Pull Requests",id:"pull-requests",level:2},{value:"Dependency Management",id:"dependency-management",level:3},{value:"Dependabot PRs that Pass CI",id:"dependabot-prs-that-pass-ci",level:4},{value:"Failed Dependabot PRs",id:"failed-dependabot-prs",level:4},{value:"Security Warnings",id:"security-warnings",level:4},{value:"Assist with New High Priority Bugs",id:"assist-with-new-high-priority-bugs",level:2},{value:"Hang Out in the #fxa Matrix Room",id:"hang-out-in-the-fxa-matrix-room",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"what-is-a-triage-owner",children:"What is a Triage Owner?"}),"\n",(0,t.jsx)(n.p,{children:"A triage owner is the designated engineer that has the primary responsibility of hosting the scheduled weekly meetings, in which we review, assess, and prioritize new issues as a team, as well as other responsibilities. While Jira is the canonical source of truth for how we track our own work, bugs may come in through several other systems that have their own requirements."}),"\n",(0,t.jsx)(n.p,{children:"Triage owners rotate throughout the team. At the time of writing, triage ownership is assigned during sprint planning meetings. The goals of our triage process and triage rotation are:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Share team responsibility of triaging issues, watching Sentry, managing dependencies, and understanding general user sentiment/feedback"}),"\n",(0,t.jsx)(n.li,{children:"Knowledge share - a triage owner may not be the expert on a topic or issue that comes up, and would rely on team input or reach out for help and learn from the process"}),"\n",(0,t.jsx)(n.li,{children:"Ensure new issues are assessed on a weekly basis and don't pile up for the next triage owner"}),"\n",(0,t.jsx)(n.li,{children:"Keep ongoing bugs and issues as well as contributor PRs and assistance in Matrix top-of-mind"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"i-am-the-triage-owner-how-should-i-prioritize-my-sprint",children:"I am the Triage Owner: How should I prioritize my Sprint?"}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsx)(n.p,{children:"If you're new to owning triage, make sure you have access to Bugzilla (FxA) or Stripe (SubPlat)."}),(0,t.jsxs)(n.p,{children:["To access the FxA Admin Panel, set up your VPN (",(0,t.jsx)(n.a,{href:"https://mana.mozilla.org/wiki/pages/viewpage.action?spaceKey=SD&title=VPN",children:"see instructions on Confluence"}),") and request to be added to the appropriate ",(0,t.jsx)(n.a,{href:"https://docs.google.com/document/d/1z_Ob6z517iVzBEk-RUqJitszP8M982uIUvKJIN0P_UM/edit#bookmark=id.uoiqp21qfgqx",children:"LDAP groups"}),"."]})]}),"\n",(0,t.jsx)(n.h3,{id:"fxa",children:"FxA"}),"\n",(0,t.jsx)(n.p,{children:"When planning your workload for the sprint, consider taking on around 50% less than usual in order to allocate a portion of each day to triage ownership duties. If you\u2019re in the middle of high priority feature work, fill your availability with that work. Otherwise, favor taking on a high priority maintenance item(s)."}),"\n",(0,t.jsx)(n.h3,{id:"subplat",children:"SubPlat"}),"\n",(0,t.jsx)(n.p,{children:"The triage owner should begin each day by checking whether there are any new urgent issues in Jira, Sentry, Stripe, and Grafana, as well as questions in the subscription-platform Slack channel."}),"\n",(0,t.jsx)(n.p,{children:"If you are currently working on an issue and there are new S1 or S2 issues, re-evaluate whether the new issue(s) should take higher priority."}),"\n",(0,t.jsx)(n.p,{children:"If there are multiple S1s and S2s of seemingly equal importance and help is needed, inform your manager and the team in the subplat-team channel."}),"\n",(0,t.jsx)(n.p,{children:"In general, the triage owner should be consistently checking whether there are new urgent or severe issues throughout the day, and be prepared to switch focus and/or redirect issues."}),"\n",(0,t.jsx)(n.h2,{id:"what-are-the-triage-owner-responsibilities",children:"What are the Triage Owner Responsibilities?"}),"\n",(0,t.jsx)(n.p,{children:"At a high level, each team's triage owner is responsible for hosting the weekly triage meeting, in which new issues in Jira and Sentry are triaged as a team."}),"\n",(0,t.jsx)(n.p,{children:"If necessary, feel free to rely on the team's general consensus of the urgency of new issues, either in the triage meeting or async in Slack."}),"\n",(0,t.jsx)(n.p,{children:"Any issues picked up as Triage Owner which land within a Sprint boundary should be added to that Sprint in Jira. This sets clear expectations on when a ticket is available for testing in Staging and Production across Engineering and QA."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"If an error, issue, work request, etc., is reported to our team in Slack, the first person to see and respond should file a bug in Jira and add the link to the Slack conversation. It will then be triaged normally in the triage meeting."})}),"\n",(0,t.jsx)(n.h3,{id:"fxa-1",children:"FxA"}),"\n",(0,t.jsx)(n.p,{children:"In addition, the FxA triage owner is also responsible for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Triaging new issues in FxA Bugzilla (as a team if there is time in the triage meeting)"}),"\n",(0,t.jsx)(n.li,{children:"Checking if there are any PRs (from team members or contributors) without a reviewer that you can help move along"}),"\n",(0,t.jsx)(n.li,{children:"Helping with Dependabot PRs"}),"\n",(0,t.jsx)(n.li,{children:"Assisting with any high priority bugs that come up during the sprint"}),"\n",(0,t.jsx)(n.li,{children:"Hanging out in the #fxa Matrix room"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"subplat-1",children:"SubPlat"}),"\n",(0,t.jsx)(n.p,{children:"In addition, the SubPlat triage owner is also responsible for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Grooming the Maintenance backlog"}),"\n",(0,t.jsx)(n.li,{children:"Asynchronous triage activities"}),"\n",(0,t.jsx)(n.li,{children:"File bugs for concerning Subscriptions-related issues identified in review from Stripe webhook events, Sentry, and Payments success/failure metrics"}),"\n",(0,t.jsx)(n.li,{children:"Triage new tickets for high priority requests or bugs, picking up the highest priority items as deemed appropriate"}),"\n",(0,t.jsx)(n.li,{children:"Picking up tickets from the top of the Maintenance and/or Bug backlogs"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"host-the-triage-meeting",children:"Host the Triage Meeting"}),"\n",(0,t.jsx)(n.p,{children:"FxA and SubPlat have separate triage meetings which are hosted by their respective triage owners. To discuss each issue and make decisions as a group, the triage owner will share their screen in Zoom with the team while going through Jira, Sentry, Grafana, Bugzilla (FxA only), and Stripe (SubPlat only)."}),"\n",(0,t.jsx)(n.p,{children:"The most up-to-date links can be found in:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"the triage meeting calendar invite (for FxA), or"}),"\n",(0,t.jsx)(n.li,{children:"the weekly check-in doc attached to the calendar event 'SubPlat Team & Triage Weekly'"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Prior to the meeting, it is recommended to pull up the links to get an idea of what you\u2019ll be discussing and to make sure you don\u2019t need to re-authenticate."}),"\n",(0,t.jsx)(n.h3,{id:"jira",children:"Jira"}),"\n",(0,t.jsxs)(n.p,{children:['In the "FxA & Subscription Platform Triage" Board, select Backlog in the sidebar navigation, and collapse the \u201cTo Do\u201d section to see the \u201cBacklog\u201d section for untriaged issues. Note, there is a ',(0,t.jsx)(n.em,{children:"Not Subscription Platform"})," filter to help target issues."]}),"\n",(0,t.jsx)(n.p,{children:"When reviewing issues, leave tickets as-is if they are not applicable to your team. The following should be reviewed for each ticket:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Make sure the issue is clear and ready to be worked on."})," If more info or context is needed that an engineer in the triage meeting can provide, either leave a summary comment of what\u2019s stated (if it\u2019s quick) or ask them to comment on it. You can also @-mention those who may be able to answer pending questions. If more info is needed and the issue seems high priority, consider pinging the reporter directly about the issue after the triage meeting."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Check that the issue type is correct."})," The default type when filing in Jira is \u201ctask\u201d. Other types include \u201cspike\u201d (for research task or work breakdown task) and \u201cbug\u201d (in which you will need to fill out the \u201cFound in\u201d (environment) and \u201c",(0,t.jsx)(n.a,{href:"https://wiki.mozilla.org/BMO/UserGuide/BugFields#bug_severity",children:"Severity"}),"\u201d (S1 is highest, S4 is lowest) fields)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Add an initial estimated number of story points"}),", see ",(0,t.jsx)(n.a,{href:"/ecosystem-platform/reference/team-processes/development-process#estimation-and-point-values",children:"Estimation and Point Values"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Add the appropriate epic, labels, and/or issue links, if applicable."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"It\u2019s uncommon for a new issue in triage to lack an epic if it should be associated with one, though it\u2019s good to be aware of existing epics and the roadmap."}),"\n",(0,t.jsxs)(n.li,{children:["Add the appropriate labels (e.g. ",(0,t.jsx)(n.code,{children:"needsdiscussion"}),", ",(0,t.jsx)(n.code,{children:"needslegal"}),", ",(0,t.jsx)(n.code,{children:"needsproduct"}),", ",(0,t.jsx)(n.code,{children:"needsux"}),"). Other common labels to consider are ",(0,t.jsx)(n.code,{children:"maintenance"})," and ",(0,t.jsx)(n.code,{children:"qa-"})," (see ",(0,t.jsx)(n.a,{href:"/ecosystem-platform/reference/team-processes/development-process#labels-we-use",children:"labels"})," for more)."]}),"\n",(0,t.jsx)(n.li,{children:"Issue links create a link between issues (e.g., issues can be \u201cblocked by X issue\u201d, \u201crelates to X issue\u201d, and more)."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Move the issue out of the backlog section."}),' If the issue seems high priority, it can either be added to the current or following sprint by updating the \u201cSprint\u201d field, or moved to the top of the \u201cTo Do\u201d list by right-clicking and following the context menu. If someone on the call asks to be assigned, fill out the Assignee field. Finally, update the status from "New" to "To Do".']}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"sentry",children:"Sentry"}),"\n",(0,t.jsx)(n.p,{children:"We use Sentry to capture errors that occur across the entire stack. While we should monitor our production instances most closely, we should also keep an eye out on staging instances for new issues exposed by QA. While there are many projects in the FxA group on Sentry and it\u2019s always helpful to poke through more than what\u2019s listed here, we generally check the following deployments:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fxa-auth-prod"})," (FxA and SubPlat)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fxa-content-server-prod"})," (FxA - this covers ",(0,t.jsx)(n.code,{children:"fxa-content-server"})," and ",(0,t.jsx)(n.code,{children:"fxa-settings"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fxa-graphql-prod"})," (FxA)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fxa-content-client-prod"})," (FxA)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fxa-payments-prod"})," (SubPlat)"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"When you\u2019re looking at new issues, check that there\u2019s not already a comment or linked issue that might give you more context for it. If there\u2019s discussion in the triage meeting, consider leaving a comment on the issue in Sentry."}),"\n",(0,t.jsxs)(n.p,{children:["Sometimes, errors come up that seem unlikely to come up again or that we\u2019d want to look at later if it persists. You can check \u201cignore until...\u201d and choose an appropriate option. If you notice a new problem since a previous deployment or an issue that affects a lot of users through a lot of events, it\u2019s very likely worth filing an issue for. File an issue with a link to the Sentry error and (likely) add the ",(0,t.jsx)(n.code,{children:"maintenance"})," label in Jira, and then link it in Sentry via the \u201cLink Github Issues\u201d on the right-hand side."]}),"\n",(0,t.jsx)(n.p,{children:"If you\u2019re finishing Sentry triage by yourself because there wasn't enough time during the team triage and aren\u2019t sure about an issue, feel free to ask the team, and/or go ahead and file an issue for it. It\u2019s fine to timebox yourself, though, there\u2019s a lot of issues that come in and we only have so much time to evaluate and fix issues."}),"\n",(0,t.jsx)(n.h3,{id:"grafana",children:"Grafana"}),"\n",(0,t.jsx)(n.p,{children:"SubPlat observes the following Grafana dashboards (see links under Resources/Triage within the SubPlat Weekly Check-in doc attached to the calendar event 'SubPlat Team & Triage Weekly'):"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Auth Server (Subscription Platform section)"}),"\n",(0,t.jsxs)(n.li,{children:["Event Broker","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If there is any unusual activity, identify the relying parties by looking up the IDs in FxA Admin Panel and inform both teams in the fxa-team channel"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Payments Server","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Keep an eye on check-ins in ",(0,t.jsx)(n.code,{children:"PayPal Processor Cron Job"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"bugzilla-fxa-only",children:"Bugzilla (FxA only)"}),"\n",(0,t.jsx)(n.p,{children:"If there's time left in the FxA triage meeting, Bugzilla can be looked at as a team that day. Ideally, the triage owner will check Bugzilla every day on their own."}),"\n",(0,t.jsxs)(n.p,{children:["There is no longer much activity in our Bugzilla component so this won't take long. Check ",(0,t.jsx)(n.a,{href:"https://bugzilla.mozilla.org/buglist.cgi?cmdtype=dorem&remaction=run&namedcmd=CloudServices%3A%3AServer%3AFirefoxAccounts&sharer_id=177149&list_id=15894255",children:"Bugzilla Cloud Services FxA"})," and check out the newest issues, as well as the newest with activity by clicking on \u201cUpdated on.\u201d Look at new issues filed, but also check if you can mark previous issues as \u201cresolved\u201d. When you respond to an issue, consider assigning yourself to the bug."]}),"\n",(0,t.jsx)(n.p,{children:"If a Bugzilla bug includes a user's email address or any PII (personal identifiable information) in the bug description, then do the following:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Click the \u201cedit bug\u201d button"}),"\n",(0,t.jsx)(n.li,{children:"Scroll down to \u201cSecurity (public)\u201d"}),"\n",(0,t.jsx)(n.li,{children:'Check the box "Confidential Mozilla Employee Bug (non-security)" and save'}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This is to protect their email address from being on a publicly accessible link and users will be able to see their own issues even if they\u2019re marked confidential."}),"\n",(0,t.jsxs)(n.p,{children:["\u2b50\ufe0f Many Bugzilla tickets we triage from our users create tickets for similar reasons. Check out the ",(0,t.jsx)(n.a,{href:"https://docs.google.com/document/d/1z_Ob6z517iVzBEk-RUqJitszP8M982uIUvKJIN0P_UM/edit#",children:"FxA Bugzilla Common Scenarios & Responses doc"}),' for examples of typical user requests and our response. If you come across a scenario we may see again in the future, please document it there for future reference. Also, remember the people you\'re helping are our users. Feel free to personalize or change a "canned response" as needed.']}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"Sometimes all a user needs to resolve their issue, for example, and depending on what they report, is the date they enabled 2FA on their account so they can search their files to find saved recovery codes. You might consider providing users relevant info from the Admin Panel if there's nothing we can do on our end in case it rings any bells for them."})}),"\n",(0,t.jsxs)(n.p,{children:["If the reported bug is around an ",(0,t.jsx)(n.a,{href:"/ecosystem-platform/reference/emails#bounce-types",children:"email bounce account block"})," and you successfully clear it in the Admin Panel, go ahead and close the bug after you comment back. Many users don't report back after they've successfully logged in after being unblocked."]}),"\n",(0,t.jsx)(n.p,{children:"You may need to file an issue in Jira for bugs in Bugzilla to surface issues to the team that would require changes in our codebase."}),"\n",(0,t.jsxs)(n.p,{children:["If you see a bug filed requesting ",(0,t.jsx)(n.a,{href:"/ecosystem-platform/relying-parties/tutorials/integration-with-fxa#oauth-integration",children:"OAuth client details"}),", post in the FxA team Slack channel. Reference the bug, and bring it to the attention of SRE."]}),"\n",(0,t.jsx)(n.h3,{id:"stripe-triage-subplat-only",children:"Stripe Triage (SubPlat only)"}),"\n",(0,t.jsx)(n.p,{children:"Triaging Stripe consists of ensuring that failed webhook event deliveries are successful upon retries in production."}),"\n",(0,t.jsxs)(n.p,{children:["To review the failed webhooks, log into Stripe Dashboard, check that you are in the correct environment (Subscription Platform) and not in Test Mode. Expand the Workbench on the bottom of the screen, select the Webhooks tab and hosted endpoint ",(0,t.jsx)(n.code,{children:"https://api.accounts.firefox.com/v1/oauth/subscriptions/stripe/event"}),'. Select Event deliveries and update the Status field to "Failed" to view all of the failed events. In each Delivery attempts section, you should see it returned 200.']}),"\n",(0,t.jsx)(n.p,{children:"If a webhook has not returned 200 upon retry, investigate what may have happened and/or ask for help in the subplat-team channel."}),"\n",(0,t.jsx)(n.h2,{id:"pull-requests",children:"Pull Requests"}),"\n",(0,t.jsxs)(n.p,{children:["The FxA and SubPlat team typically reviews ",(0,t.jsx)(n.a,{href:"https://github.com/mozilla/fxa/pulls",children:"pull requests"})," and merges dependabot PRs without having a specified owner for those tasks. However, as triage owner, you should do what you can to move both of these along."]}),"\n",(0,t.jsx)(n.p,{children:"If there's an open, unreviewed, or unassigned pull request, consider reviewing it if you can. If a PR has been opened by a contributor, either review or request someone else to review it. If a PR has been hanging around for a while and it's not clear why, consider investigating in case there's a blocker you can help with, or a hold for a specific reason that could be noted in a comment in the PR."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"If you're the FxA triage owner,"})," check for PRs in the ",(0,t.jsx)(n.a,{href:"https://github.com/mozilla/ecosystem-platform/pulls",children:"ecosystem-docs repo"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"dependency-management",children:"Dependency Management"}),"\n",(0,t.jsxs)(n.p,{children:["FxA uses Dependabot to automate dependency updates for us. Every day, it checks our dependency files for outdated requirements and opens individual PRs for any it finds with a daily limit we set. Our Dependabot config lives in ",(0,t.jsx)(n.a,{href:"https://github.com/mozilla/fxa/blob/main/.github/dependabot.yml",children:(0,t.jsx)(n.code,{children:"dependabot.yml"})}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"Keep in mind that Dependabot duty is shared between the FxA triage owner and the SubPlat triage owner. Try to move these PRs along at least once or twice a week, but also be sure to timebox yourself."})}),"\n",(0,t.jsx)(n.h4,{id:"dependabot-prs-that-pass-ci",children:"Dependabot PRs that Pass CI"}),"\n",(0,t.jsxs)(n.p,{children:['Generally speaking, if CI is green, the dependency is likely fine to merge. However, also take a look at the number shown on the "checks" tab of the PR. If there\'s less than 4 checks, our CI suite may not have ran on the PR. Comment on it with ',(0,t.jsx)(n.code,{children:"@dependabot recreate"})," to rerun the test suite and make sure ",(0,t.jsx)(n.code,{children:"test_pull_request"})," runs and completes without error."]}),"\n",(0,t.jsxs)(n.p,{children:["If CI is green, ",(0,t.jsx)(n.code,{children:"test_pull_request"})," was ran, and none of the files changed looks out of the ordinary, approve the Dependabot PR and merge the pull request. If you need Dependabot to rebase the change, comment on the PR with ",(0,t.jsx)(n.code,{children:"@dependabot rebase"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"Try not to merge dependency updates if we're planning on tagging a release the same day. If we merge something in and discover a dependency problem with or after the tag, we will need a dot release just to patch the bad dependency upgrade."})}),"\n",(0,t.jsx)(n.h4,{id:"failed-dependabot-prs",children:"Failed Dependabot PRs"}),"\n",(0,t.jsx)(n.p,{children:"If a Dependabot PR fails CI, investigate the failure. If it was a flaky test failure, rerun CI from failed. If the failure is legit and it looks like it can be resolved quickly or easily, consider checking into the Dependabot branch, fixing what caused the failure, and pushing the fix to the PR. If the needed change was anything other than a small tweak, request a review from a teammate to double check your work before merging."}),"\n",(0,t.jsxs)(n.p,{children:["If there are many failures and/or it's not feasible to fix the failures at the moment, create a Jira ticket for the package upgrade failure if one doesn\u2019t already exist and give it the labels ",(0,t.jsx)(n.code,{children:"maintenance"})," and ",(0,t.jsx)(n.code,{children:"dependencies"}),", link to it from the Dependabot PR, comment ",(0,t.jsx)(n.code,{children:"@dependabot ignore this major version"}),", and close the PR. We ignore until the next major version instead of a minor version because the chance that it will fail again is very high, but we want it to remind us again when a dependency has a major upgrade so that the dependency doesn't just get lost in the backlog (plus, wishful thinking that maybe it will magically pass \ud83e\udd1e)."]}),"\n",(0,t.jsx)(n.p,{children:"If a ticket has already been filed for a previous failure of the same package and the new failure is because of a Dependabot attempt to upgrade to the new major version, comment on the ticket to note how far behind the dependency is. Consider bringing it up in the next triage meeting - if our backlog is full of needed dependency upgrades, we'll likely find the time to work through at least some of them."}),"\n",(0,t.jsx)(n.h4,{id:"security-warnings",children:"Security Warnings"}),"\n",(0,t.jsxs)(n.p,{children:["Dependabot will produce ",(0,t.jsx)(n.a,{href:"https://github.com/mozilla/fxa/security/dependabot",children:"Security Alerts"})," for packages that have registered ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures",children:"CVE"})," numbers that cannot be resolved automatically. At least once during your triage ownership rotation, check these alerts to see if there are any vulnerabilities identified, especially those marked as as critical (or even high) severity. You may also choose review these as a team in the triage meeting if you wish, and it may be good to collaborate with the other triage owner to either make sure you're not working on fixing the same vulnerability, or to pair on a fix."]}),"\n",(0,t.jsxs)(n.p,{children:['If Dependabot thinks it can automatically fix the alert for us, a "Create dependabot security update" button will be present. This is a good clue, as well as a "Dependabot can\'t update vulnerable dependencies without a lockfile" note, that the upgrade should be simple. You can check what packages are affected by running ',(0,t.jsx)(n.code,{children:"yarn why <package name>"}),". If there's only one or two affected packages, consider trying to manually upgrade the dependency to the patched version shown in the alert."]}),"\n",(0,t.jsxs)(n.p,{children:["However, sometimes, security alerts are for deeply nested dependencies. In this case, we use ",(0,t.jsx)(n.a,{href:"https://classic.yarnpkg.com/lang/en/docs/selective-version-resolutions/",children:"Yarn resolutions"}),". To resolve the security warning:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Copy the ",(0,t.jsx)(n.em,{children:"patched version"}),' from the security warning into the "resolutions" section of our root-level ',(0,t.jsx)(n.code,{children:"package.json"}),", example:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'"resolutions": {\n  "postcss": "^7.0.36",\n'})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Update the ",(0,t.jsx)(n.code,{children:"yarn.lock"})," file by running ",(0,t.jsx)(n.code,{children:"yarn install"})]}),"\n",(0,t.jsxs)(n.li,{children:["Commit your changes in a PR titled ",(0,t.jsx)(n.code,{children:"chore(deps): Upgrade <list affected packages>"})]}),"\n",(0,t.jsx)(n.li,{children:"Create a PR and request review"}),"\n",(0,t.jsx)(n.li,{children:"If our CI suite passes, it probably means the dependency resolution is good to merge. However, keep in mind that like other dependency upgrades, something may break, and the dependency upgrade may need to be reverted."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["If the dependency needs to be reverted or if CI fails after the PR is created and it's not feasible to fix the failures at the moment, you may be able to determine that certain vulnerabilities don't affect FxA in production anyway, like if a dependency is a dev dependency or something ran at build-time. These kinds of alerts can usually be dismissed. This is also a good time to evaluate if we ",(0,t.jsx)(n.em,{children:"need"})," a dependency - maybe the fix is to uninstall the dependency if we use it sparingly, especially if it's an old and outdated package, rather than spend time upgrading it."]}),"\n",(0,t.jsxs)(n.p,{children:["Otherwise, ",(0,t.jsx)(n.a,{href:"https://bugzilla.mozilla.org/enter_bug.cgi?product=Cloud%20Services&component=Server%3A%20Firefox%20Accounts",children:"file an issue in Bugzilla"}),' for each critical issue, and mark them as "Confidential Mozilla Employee Bug (non-security)". While these are security issues, marking them as "security" requires more process and sign off from another team that we don\'t need for these alerts. File an issue in Jira, and reference only "Bugzilla #####" with the number, and in the issue body, add a link to the Bugzilla ticket without other context. The issue will then be triaged normally.']}),"\n",(0,t.jsx)(n.h2,{id:"assist-with-new-high-priority-bugs",children:"Assist with New High Priority Bugs"}),"\n",(0,t.jsx)(n.p,{children:"Sometimes a blocking or major bug is identified by QA that needs to be patched ASAP. When possible, be available to pick up the bug to enable other team members to maintain focus on project work."}),"\n",(0,t.jsx)(n.h2,{id:"hang-out-in-the-fxa-matrix-room",children:"Hang Out in the #fxa Matrix Room"}),"\n",(0,t.jsxs)(n.p,{children:["Many teams at Mozilla use Matrix, also known as IRC or Element, for communication. While the FxA and SubPlat team primarily communicates via Slack, we link to ",(0,t.jsx)(n.a,{href:"https://chat.mozilla.org/#/room/#fxa:mozilla.org",children:"our Matrix chat room"})," in our documentation as a way to contact us, and sometimes contributors and other folks reach out to us with questions through it."]}),"\n",(0,t.jsx)(n.p,{children:"Triage owners should occasionally check to see if they can answer any questions asked in the #fxa Matrix room."})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var t=i(96540);const s={},a=t.createContext(s);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);